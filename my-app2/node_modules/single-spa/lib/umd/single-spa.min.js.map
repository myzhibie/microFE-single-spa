{"version":3,"file":"single-spa.min.js","sources":["../../node_modules/custom-event/index.js","../../src/applications/app-errors.js","../../src/applications/app.helpers.js","../../src/utils/assign.js","../../src/utils/find.js","../../src/lifecycles/lifecycle.helpers.js","../../src/lifecycles/bootstrap.js","../../src/lifecycles/unmount.js","../../src/lifecycles/mount.js","../../src/parcels/mount-parcel.js","../../src/lifecycles/update.js","../../src/lifecycles/prop.helpers.js","../../src/applications/timeouts.js","../../src/lifecycles/load.js","../../src/navigation/navigation-events.js","../../src/jquery-support.js","../../src/lifecycles/unload.js","../../src/applications/apps.js","../../src/navigation/reroute.js","../../src/start.js","../../src/devtools/devtools.js","../../src/single-spa.js"],"sourcesContent":["\nvar NativeCustomEvent = global.CustomEvent;\n\nfunction useNative () {\n  try {\n    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });\n    return  'cat' === p.type && 'bar' === p.detail.foo;\n  } catch (e) {\n  }\n  return false;\n}\n\n/**\n * Cross-browser `CustomEvent` constructor.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n *\n * @public\n */\n\nmodule.exports = useNative() ? NativeCustomEvent :\n\n// IE >= 9\n'undefined' !== typeof document && 'function' === typeof document.createEvent ? function CustomEvent (type, params) {\n  var e = document.createEvent('CustomEvent');\n  if (params) {\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n  } else {\n    e.initCustomEvent(type, false, false, void 0);\n  }\n  return e;\n} :\n\n// IE <= 8\nfunction CustomEvent (type, params) {\n  var e = document.createEventObject();\n  e.type = type;\n  if (params) {\n    e.bubbles = Boolean(params.bubbles);\n    e.cancelable = Boolean(params.cancelable);\n    e.detail = params.detail;\n  } else {\n    e.bubbles = false;\n    e.cancelable = false;\n    e.detail = void 0;\n  }\n  return e;\n}\n","import { objectType, toName } from \"./app.helpers\";\n\nlet errorHandlers = [];\n\nexport function handleAppError(err, app, newStatus) {\n  const transformedErr = transformErr(err, app, newStatus);\n\n  if (errorHandlers.length) {\n    errorHandlers.forEach(handler => handler(transformedErr));\n  } else {\n    setTimeout(() => {\n      throw transformedErr;\n    });\n  }\n}\n\nexport function addErrorHandler(handler) {\n  if (typeof handler !== \"function\") {\n    throw Error(\n      formatErrorMessage(\n        28,\n        __DEV__ && \"a single-spa error handler must be a function\"\n      )\n    );\n  }\n\n  errorHandlers.push(handler);\n}\n\nexport function removeErrorHandler(handler) {\n  if (typeof handler !== \"function\") {\n    throw Error(\n      formatErrorMessage(\n        29,\n        __DEV__ && \"a single-spa error handler must be a function\"\n      )\n    );\n  }\n\n  let removedSomething = false;\n  errorHandlers = errorHandlers.filter(h => {\n    const isHandler = h === handler;\n    removedSomething = removedSomething || isHandler;\n    return !isHandler;\n  });\n\n  return removedSomething;\n}\n\nexport function formatErrorMessage(code, msg, ...args) {\n  return `single-spa minified message #${code}: ${\n    msg ? msg + \" \" : \"\"\n  }See https://single-spa.js.org/error/?code=${code}${\n    args.length ? `&arg=${args.join(\"&arg=\")}` : \"\"\n  }`;\n}\n\nexport function transformErr(ogErr, appOrParcel, newStatus) {\n  const errPrefix = `${objectType(appOrParcel)} '${toName(\n    appOrParcel\n  )}' died in status ${appOrParcel.status}: `;\n\n  let result;\n\n  if (ogErr instanceof Error) {\n    try {\n      ogErr.message = errPrefix + ogErr.message;\n    } catch (err) {\n      /* Some errors have read-only message properties, in which case there is nothing\n       * that we can do.\n       */\n    }\n    result = ogErr;\n  } else {\n    console.warn(\n      formatErrorMessage(\n        30,\n        __DEV__ &&\n          `While ${appOrParcel.status}, '${toName(\n            appOrParcel\n          )}' rejected its lifecycle function promise with a non-Error. This will cause stack traces to not be accurate.`,\n        appOrParcel.status,\n        toName(appOrParcel)\n      )\n    );\n    try {\n      result = Error(errPrefix + JSON.stringify(ogErr));\n    } catch (err) {\n      // If it's not an Error and you can't stringify it, then what else can you even do to it?\n      result = ogErr;\n    }\n  }\n\n  result.appOrParcelName = toName(appOrParcel);\n\n  // We set the status after transforming the error so that the error message\n  // references the state the application was in before the status change.\n  appOrParcel.status = newStatus;\n\n  return result;\n}\n","import { handleAppError } from \"./app-errors.js\";\n\n// App statuses\nexport const NOT_LOADED = \"NOT_LOADED\";\nexport const LOADING_SOURCE_CODE = \"LOADING_SOURCE_CODE\";\nexport const NOT_BOOTSTRAPPED = \"NOT_BOOTSTRAPPED\";\nexport const BOOTSTRAPPING = \"BOOTSTRAPPING\";\nexport const NOT_MOUNTED = \"NOT_MOUNTED\";\nexport const MOUNTING = \"MOUNTING\";\nexport const MOUNTED = \"MOUNTED\";\nexport const UPDATING = \"UPDATING\";\nexport const UNMOUNTING = \"UNMOUNTING\";\nexport const UNLOADING = \"UNLOADING\";\nexport const LOAD_ERROR = \"LOAD_ERROR\";\nexport const SKIP_BECAUSE_BROKEN = \"SKIP_BECAUSE_BROKEN\";\n\nexport function isActive(app) {\n  return app.status === MOUNTED;\n}\n\nexport function isntActive(app) {\n  return !isActive(app);\n}\n\nexport function isLoaded(app) {\n  return (\n    app.status !== NOT_LOADED &&\n    app.status !== LOADING_SOURCE_CODE &&\n    app.status !== LOAD_ERROR\n  );\n}\n\nexport function isntLoaded(app) {\n  return !isLoaded(app);\n}\n\nexport function shouldBeActive(app) {\n  try {\n    return app.activeWhen(window.location);\n  } catch (err) {\n    handleAppError(err, app, SKIP_BECAUSE_BROKEN);\n  }\n}\n\nexport function shouldntBeActive(app) {\n  try {\n    return !app.activeWhen(window.location);\n  } catch (err) {\n    handleAppError(err, app, SKIP_BECAUSE_BROKEN);\n  }\n}\n\nexport function notSkipped(item) {\n  return (\n    item !== SKIP_BECAUSE_BROKEN &&\n    (!item || item.status !== SKIP_BECAUSE_BROKEN)\n  );\n}\n\nexport function withoutLoadErrors(app) {\n  return app.status === LOAD_ERROR\n    ? new Date().getTime() - app.loadErrorTime >= 200\n    : true;\n}\n\nexport function toName(app) {\n  return app.name;\n}\n\nexport function isParcel(appOrParcel) {\n  return Boolean(appOrParcel.unmountThisParcel);\n}\n\nexport function objectType(appOrParcel) {\n  return isParcel(appOrParcel) ? \"parcel\" : \"application\";\n}\n","// Object.assign() is not available in IE11. And the babel compiled output for object spread\n// syntax checks a bunch of Symbol stuff and is almost a kb. So this function is the smaller replacement.\nexport function assign() {\n  for (let i = arguments.length - 1; i > 0; i--) {\n    for (let key in arguments[i]) {\n      if (key === \"__proto__\") {\n        continue;\n      }\n      arguments[i - 1][key] = arguments[i][key];\n    }\n  }\n\n  return arguments[0];\n}\n","/* the array.prototype.find polyfill on npmjs.com is ~20kb (not worth it)\n * and lodash is ~200kb (not worth it)\n */\n\nexport function find(arr, func) {\n  for (let i = 0; i < arr.length; i++) {\n    if (func(arr[i])) {\n      return arr[i];\n    }\n  }\n\n  return null;\n}\n","import { find } from \"../utils/find.js\";\nimport { objectType, toName } from \"../applications/app.helpers.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\n\nexport function validLifecycleFn(fn) {\n  return fn && (typeof fn === \"function\" || isArrayOfFns(fn));\n\n  function isArrayOfFns(arr) {\n    return Array.isArray(arr) && !find(arr, item => typeof item !== \"function\");\n  }\n}\n\nexport function flattenFnArray(appOrParcel, lifecycle) {\n  let fns = appOrParcel[lifecycle] || [];\n  fns = Array.isArray(fns) ? fns : [fns];\n  if (fns.length === 0) {\n    fns = [() => Promise.resolve()];\n  }\n\n  const type = objectType(appOrParcel);\n  const name = toName(appOrParcel);\n\n  return function(props) {\n    return fns.reduce((resultPromise, fn, index) => {\n      return resultPromise.then(() => {\n        const thisPromise = fn(props);\n        return smellsLikeAPromise(thisPromise)\n          ? thisPromise\n          : Promise.reject(\n              formatErrorMessage(\n                15,\n                __DEV__ &&\n                  `Within ${type} ${name}, the lifecycle function ${lifecycle} at array index ${index} did not return a promise`,\n                type,\n                name,\n                lifecycle,\n                index\n              )\n            );\n      });\n    }, Promise.resolve());\n  };\n}\n\nexport function smellsLikeAPromise(promise) {\n  return (\n    promise &&\n    typeof promise.then === \"function\" &&\n    typeof promise.catch === \"function\"\n  );\n}\n","import {\n  NOT_BOOTSTRAPPED,\n  BOOTSTRAPPING,\n  NOT_MOUNTED,\n  SKIP_BECAUSE_BROKEN\n} from \"../applications/app.helpers.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\nimport { handleAppError, transformErr } from \"../applications/app-errors.js\";\n\nexport function toBootstrapPromise(appOrParcel, hardFail) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== NOT_BOOTSTRAPPED) {\n      return appOrParcel;\n    }\n\n    appOrParcel.status = BOOTSTRAPPING;\n\n    return reasonableTime(appOrParcel, \"bootstrap\")\n      .then(() => {\n        appOrParcel.status = NOT_MOUNTED;\n        return appOrParcel;\n      })\n      .catch(err => {\n        if (hardFail) {\n          throw transformErr(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n        } else {\n          handleAppError(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          return appOrParcel;\n        }\n      });\n  });\n}\n","import {\n  UNMOUNTING,\n  NOT_MOUNTED,\n  MOUNTED,\n  SKIP_BECAUSE_BROKEN\n} from \"../applications/app.helpers.js\";\nimport { handleAppError, transformErr } from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\n\nexport function toUnmountPromise(appOrParcel, hardFail) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== MOUNTED) {\n      return appOrParcel;\n    }\n    appOrParcel.status = UNMOUNTING;\n\n    const unmountChildrenParcels = Object.keys(\n      appOrParcel.parcels\n    ).map(parcelId => appOrParcel.parcels[parcelId].unmountThisParcel());\n\n    let parcelError;\n\n    return Promise.all(unmountChildrenParcels)\n      .then(unmountAppOrParcel, parcelError => {\n        // There is a parcel unmount error\n        return unmountAppOrParcel().then(() => {\n          // Unmounting the app/parcel succeeded, but unmounting its children parcels did not\n          const parentError = Error(parcelError.message);\n          if (hardFail) {\n            throw transformErr(parentError, appOrParcel, SKIP_BECAUSE_BROKEN);\n          } else {\n            handleAppError(parentError, appOrParcel, SKIP_BECAUSE_BROKEN);\n          }\n        });\n      })\n      .then(() => appOrParcel);\n\n    function unmountAppOrParcel() {\n      // We always try to unmount the appOrParcel, even if the children parcels failed to unmount.\n      return reasonableTime(appOrParcel, \"unmount\")\n        .then(() => {\n          // The appOrParcel needs to stay in a broken status if its children parcels fail to unmount\n          if (!parcelError) {\n            appOrParcel.status = NOT_MOUNTED;\n          }\n        })\n        .catch(err => {\n          if (hardFail) {\n            throw transformErr(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          } else {\n            handleAppError(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          }\n        });\n    }\n  });\n}\n","import {\n  NOT_MOUNTED,\n  MOUNTED,\n  SKIP_BECAUSE_BROKEN\n} from \"../applications/app.helpers.js\";\nimport { handleAppError, transformErr } from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\nimport CustomEvent from \"custom-event\";\nimport { toUnmountPromise } from \"./unmount.js\";\n\nlet beforeFirstMountFired = false;\nlet firstMountFired = false;\n\nexport function toMountPromise(appOrParcel, hardFail) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== NOT_MOUNTED) {\n      return appOrParcel;\n    }\n\n    if (!beforeFirstMountFired) {\n      window.dispatchEvent(new CustomEvent(\"single-spa:before-first-mount\"));\n      beforeFirstMountFired = true;\n    }\n\n    return reasonableTime(appOrParcel, \"mount\")\n      .then(() => {\n        appOrParcel.status = MOUNTED;\n\n        if (!firstMountFired) {\n          window.dispatchEvent(new CustomEvent(\"single-spa:first-mount\"));\n          firstMountFired = true;\n        }\n\n        return appOrParcel;\n      })\n      .catch(err => {\n        // If we fail to mount the appOrParcel, we should attempt to unmount it before putting in SKIP_BECAUSE_BROKEN\n        // We temporarily put the appOrParcel into MOUNTED status so that toUnmountPromise actually attempts to unmount it\n        // instead of just doing a no-op.\n        appOrParcel.status = MOUNTED;\n        return toUnmountPromise(appOrParcel, true).then(\n          setSkipBecauseBroken,\n          setSkipBecauseBroken\n        );\n\n        function setSkipBecauseBroken() {\n          if (!hardFail) {\n            handleAppError(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n            return appOrParcel;\n          } else {\n            throw transformErr(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          }\n        }\n      });\n  });\n}\n","import {\n  validLifecycleFn,\n  flattenFnArray\n} from \"../lifecycles/lifecycle.helpers.js\";\nimport {\n  NOT_BOOTSTRAPPED,\n  NOT_MOUNTED,\n  MOUNTED,\n  LOADING_SOURCE_CODE,\n  SKIP_BECAUSE_BROKEN,\n  toName\n} from \"../applications/app.helpers.js\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap.js\";\nimport { toMountPromise } from \"../lifecycles/mount.js\";\nimport { toUpdatePromise } from \"../lifecycles/update.js\";\nimport { toUnmountPromise } from \"../lifecycles/unmount.js\";\nimport { ensureValidAppTimeouts } from \"../applications/timeouts.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\n\nlet parcelCount = 0;\nconst rootParcels = { parcels: {} };\n\n// This is a public api, exported to users of single-spa\nexport function mountRootParcel() {\n  return mountParcel.apply(rootParcels, arguments);\n}\n\nexport function mountParcel(config, customProps) {\n  const owningAppOrParcel = this;\n\n  // Validate inputs\n  if (!config || (typeof config !== \"object\" && typeof config !== \"function\")) {\n    throw Error(\n      formatErrorMessage(\n        2,\n        __DEV__ &&\n          \"Cannot mount parcel without a config object or config loading function\"\n      )\n    );\n  }\n\n  if (config.name && typeof config.name !== \"string\") {\n    throw Error(\n      formatErrorMessage(\n        3,\n        __DEV__ &&\n          `Parcel name must be a string, if provided. Was given ${typeof config.name}`,\n        typeof config.name\n      )\n    );\n  }\n\n  if (typeof customProps !== \"object\") {\n    throw Error(\n      formatErrorMessage(\n        4,\n        __DEV__ &&\n          `Parcel ${name} has invalid customProps -- must be an object but was given ${typeof customProps}`,\n        name,\n        typeof customProps\n      )\n    );\n  }\n\n  if (!customProps.domElement) {\n    throw Error(\n      formatErrorMessage(\n        5,\n        __DEV__ &&\n          `Parcel ${name} cannot be mounted without a domElement provided as a prop`,\n        name\n      )\n    );\n  }\n\n  const id = parcelCount++;\n\n  const passedConfigLoadingFunction = typeof config === \"function\";\n  const configLoadingFunction = passedConfigLoadingFunction\n    ? config\n    : () => Promise.resolve(config);\n\n  // Internal representation\n  const parcel = {\n    id,\n    parcels: {},\n    status: passedConfigLoadingFunction\n      ? LOADING_SOURCE_CODE\n      : NOT_BOOTSTRAPPED,\n    customProps,\n    parentName: toName(owningAppOrParcel),\n    unmountThisParcel() {\n      if (parcel.status !== MOUNTED) {\n        throw Error(\n          formatErrorMessage(\n            6,\n            __DEV__ &&\n              `Cannot unmount parcel '${name}' -- it is in a ${parcel.status} status`,\n            name,\n            parcel.status\n          )\n        );\n      }\n\n      return toUnmountPromise(parcel, true)\n        .then(value => {\n          if (parcel.parentName) {\n            delete owningAppOrParcel.parcels[parcel.id];\n          }\n\n          return value;\n        })\n        .then(value => {\n          resolveUnmount(value);\n          return value;\n        })\n        .catch(err => {\n          parcel.status = SKIP_BECAUSE_BROKEN;\n          rejectUnmount(err);\n          throw err;\n        });\n    }\n  };\n\n  // We return an external representation\n  let externalRepresentation;\n\n  // Add to owning app or parcel\n  owningAppOrParcel.parcels[id] = parcel;\n\n  let loadPromise = configLoadingFunction();\n\n  if (!loadPromise || typeof loadPromise.then !== \"function\") {\n    throw Error(\n      formatErrorMessage(\n        7,\n        __DEV__ &&\n          `When mounting a parcel, the config loading function must return a promise that resolves with the parcel config`\n      )\n    );\n  }\n\n  loadPromise = loadPromise.then(config => {\n    if (!config) {\n      throw Error(\n        formatErrorMessage(\n          8,\n          __DEV__ &&\n            `When mounting a parcel, the config loading function returned a promise that did not resolve with a parcel config`\n        )\n      );\n    }\n\n    const name = config.name || `parcel-${id}`;\n\n    if (!validLifecycleFn(config.bootstrap)) {\n      throw Error(\n        formatErrorMessage(\n          9,\n          __DEV__ && `Parcel ${name} must have a valid bootstrap function`,\n          name\n        )\n      );\n    }\n\n    if (!validLifecycleFn(config.mount)) {\n      throw Error(\n        formatErrorMessage(\n          10,\n          __DEV__ && `Parcel ${name} must have a valid mount function`,\n          name\n        )\n      );\n    }\n\n    if (!validLifecycleFn(config.unmount)) {\n      throw Error(\n        formatErrorMessage(\n          11,\n          __DEV__ && `Parcel ${name} must have a valid unmount function`,\n          name\n        )\n      );\n    }\n\n    if (config.update && !validLifecycleFn(config.update)) {\n      throw Error(\n        formatErrorMessage(\n          12,\n          __DEV__ && `Parcel ${name} provided an invalid update function`,\n          name\n        )\n      );\n    }\n\n    const bootstrap = flattenFnArray(config, \"bootstrap\");\n    const mount = flattenFnArray(config, \"mount\");\n    const unmount = flattenFnArray(config, \"unmount\");\n\n    parcel.status = NOT_BOOTSTRAPPED;\n    parcel.name = name;\n    parcel.bootstrap = bootstrap;\n    parcel.mount = mount;\n    parcel.unmount = unmount;\n    parcel.timeouts = ensureValidAppTimeouts(config.timeouts);\n\n    if (config.update) {\n      parcel.update = flattenFnArray(config, \"update\");\n      externalRepresentation.update = function(customProps) {\n        parcel.customProps = customProps;\n\n        return promiseWithoutReturnValue(toUpdatePromise(parcel));\n      };\n    }\n  });\n\n  // Start bootstrapping and mounting\n  // The .then() causes the work to be put on the event loop instead of happening immediately\n  const bootstrapPromise = loadPromise.then(() =>\n    toBootstrapPromise(parcel, true)\n  );\n  const mountPromise = bootstrapPromise.then(() =>\n    toMountPromise(parcel, true)\n  );\n\n  let resolveUnmount, rejectUnmount;\n\n  const unmountPromise = new Promise((resolve, reject) => {\n    resolveUnmount = resolve;\n    rejectUnmount = reject;\n  });\n\n  externalRepresentation = {\n    mount() {\n      return promiseWithoutReturnValue(\n        Promise.resolve().then(() => {\n          if (parcel.status !== NOT_MOUNTED) {\n            throw Error(\n              formatErrorMessage(\n                13,\n                __DEV__ &&\n                  `Cannot mount parcel '${name}' -- it is in a ${parcel.status} status`,\n                name,\n                parcel.status\n              )\n            );\n          }\n\n          // Add to owning app or parcel\n          owningAppOrParcel.parcels[id] = parcel;\n\n          return toMountPromise(parcel);\n        })\n      );\n    },\n    unmount() {\n      return promiseWithoutReturnValue(parcel.unmountThisParcel());\n    },\n    getStatus() {\n      return parcel.status;\n    },\n    loadPromise: promiseWithoutReturnValue(loadPromise),\n    bootstrapPromise: promiseWithoutReturnValue(bootstrapPromise),\n    mountPromise: promiseWithoutReturnValue(mountPromise),\n    unmountPromise: promiseWithoutReturnValue(unmountPromise)\n  };\n\n  return externalRepresentation;\n}\n\nfunction promiseWithoutReturnValue(promise) {\n  return promise.then(() => null);\n}\n","import {\n  UPDATING,\n  MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n  toName\n} from \"../applications/app.helpers.js\";\nimport {\n  transformErr,\n  formatErrorMessage\n} from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\n\nexport function toUpdatePromise(parcel) {\n  return Promise.resolve().then(() => {\n    if (parcel.status !== MOUNTED) {\n      throw Error(\n        formatErrorMessage(\n          32,\n          __DEV__ &&\n            `Cannot update parcel '${toName(\n              parcel\n            )}' because it is not mounted`,\n          toName(parcel)\n        )\n      );\n    }\n\n    parcel.status = UPDATING;\n\n    return reasonableTime(parcel, \"update\")\n      .then(() => {\n        parcel.status = MOUNTED;\n        return parcel;\n      })\n      .catch(err => {\n        throw transformErr(err, parcel, SKIP_BECAUSE_BROKEN);\n      });\n  });\n}\n","import * as singleSpa from \"../single-spa.js\";\nimport { mountParcel } from \"../parcels/mount-parcel.js\";\nimport { assign } from \"../utils/assign.js\";\nimport { isParcel, toName } from \"../applications/app.helpers.js\";\n\nexport function getProps(appOrParcel) {\n  const result = assign({}, appOrParcel.customProps, {\n    name: toName(appOrParcel),\n    mountParcel: mountParcel.bind(appOrParcel),\n    singleSpa\n  });\n\n  if (isParcel(appOrParcel)) {\n    result.unmountSelf = appOrParcel.unmountThisParcel;\n  }\n\n  return result;\n}\n","import { assign } from \"../utils/assign\";\nimport { getProps } from \"../lifecycles/prop.helpers\";\nimport { objectType, toName } from \"./app.helpers\";\nimport { formatErrorMessage } from \"./app-errors\";\n\nconst defaultWarningMillis = 1000;\n\nconst globalTimeoutConfig = {\n  bootstrap: {\n    millis: 4000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis\n  },\n  mount: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis\n  },\n  unmount: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis\n  },\n  unload: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis\n  },\n  update: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis\n  }\n};\n\nexport function setBootstrapMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        16,\n        __DEV__ &&\n          `bootstrap max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.bootstrap = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis\n  };\n}\n\nexport function setMountMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        17,\n        __DEV__ &&\n          `mount max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.mount = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis\n  };\n}\n\nexport function setUnmountMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        18,\n        __DEV__ &&\n          `unmount max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.unmount = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis\n  };\n}\n\nexport function setUnloadMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        19,\n        __DEV__ &&\n          `unload max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.unload = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis\n  };\n}\n\nexport function reasonableTime(appOrParcel, lifecycle) {\n  const timeoutConfig = appOrParcel.timeouts[lifecycle];\n  const warningPeriod = timeoutConfig.warningMillis;\n  const type = objectType(appOrParcel);\n\n  return new Promise((resolve, reject) => {\n    let finished = false;\n    let errored = false;\n\n    appOrParcel[lifecycle](getProps(appOrParcel))\n      .then(val => {\n        finished = true;\n        resolve(val);\n      })\n      .catch(val => {\n        finished = true;\n        reject(val);\n      });\n\n    setTimeout(() => maybeTimingOut(1), warningPeriod);\n    setTimeout(() => maybeTimingOut(true), timeoutConfig.millis);\n\n    const errMsg = formatErrorMessage(\n      31,\n      __DEV__ &&\n        `Lifecycle function ${lifecycle} for ${type} ${toName(\n          appOrParcel\n        )} lifecycle did not resolve or reject for ${timeoutConfig.millis} ms.`,\n      lifecycle,\n      type,\n      toName(appOrParcel),\n      timeoutConfig.millis\n    );\n\n    function maybeTimingOut(shouldError) {\n      if (!finished) {\n        if (shouldError === true) {\n          errored = true;\n          if (timeoutConfig.dieOnTimeout) {\n            reject(Error(errMsg));\n          } else {\n            console.error(errMsg);\n            //don't resolve or reject, we're waiting this one out\n          }\n        } else if (!errored) {\n          const numWarnings = shouldError;\n          const numMillis = numWarnings * warningPeriod;\n          console.warn(errMsg);\n          if (numMillis + warningPeriod < timeoutConfig.millis) {\n            setTimeout(() => maybeTimingOut(numWarnings + 1), warningPeriod);\n          }\n        }\n      }\n    }\n  });\n}\n\nexport function ensureValidAppTimeouts(timeouts) {\n  const result = {};\n\n  for (let key in globalTimeoutConfig) {\n    result[key] = assign(\n      {},\n      globalTimeoutConfig[key],\n      (timeouts && timeouts[key]) || {}\n    );\n  }\n\n  return result;\n}\n","import {\n  LOAD_ERROR,\n  NOT_BOOTSTRAPPED,\n  LOADING_SOURCE_CODE,\n  SKIP_BECAUSE_BROKEN,\n  NOT_LOADED,\n  objectType,\n  toName\n} from \"../applications/app.helpers.js\";\nimport { ensureValidAppTimeouts } from \"../applications/timeouts.js\";\nimport {\n  handleAppError,\n  formatErrorMessage\n} from \"../applications/app-errors.js\";\nimport {\n  flattenFnArray,\n  smellsLikeAPromise,\n  validLifecycleFn\n} from \"./lifecycle.helpers.js\";\nimport { getProps } from \"./prop.helpers.js\";\nimport { assign } from \"../utils/assign.js\";\n\nexport function toLoadPromise(app) {\n  return Promise.resolve().then(() => {\n    if (app.loadPromise) {\n      return app.loadPromise;\n    }\n\n    if (app.status !== NOT_LOADED && app.status !== LOAD_ERROR) {\n      return app;\n    }\n\n    app.status = LOADING_SOURCE_CODE;\n\n    let appOpts, isUserErr;\n\n    return (app.loadPromise = Promise.resolve()\n      .then(() => {\n        const loadPromise = app.loadImpl(getProps(app));\n        if (!smellsLikeAPromise(loadPromise)) {\n          // The name of the app will be prepended to this error message inside of the handleAppError function\n          isUserErr = true;\n          throw Error(\n            formatErrorMessage(\n              33,\n              __DEV__ &&\n                `single-spa loading function did not return a promise. Check the second argument to registerApplication('${toName(\n                  app\n                )}', loadingFunction, activityFunction)`,\n              toName(app)\n            )\n          );\n        }\n        return loadPromise.then(val => {\n          app.loadErrorTime = null;\n\n          appOpts = val;\n\n          let validationErrMessage, validationErrCode;\n\n          if (typeof appOpts !== \"object\") {\n            validationErrCode = 34;\n            if (__DEV__) {\n              validationErrMessage = `does not export anything`;\n            }\n          }\n\n          if (!validLifecycleFn(appOpts.bootstrap)) {\n            validationErrCode = 35;\n            if (__DEV__) {\n              validationErrMessage = `does not export a bootstrap function or array of functions`;\n            }\n          }\n\n          if (!validLifecycleFn(appOpts.mount)) {\n            validationErrCode = 36;\n            if (__DEV__) {\n              validationErrMessage = `does not export a bootstrap function or array of functions`;\n            }\n          }\n\n          if (!validLifecycleFn(appOpts.unmount)) {\n            validationErrCode = 37;\n            if (__DEV__) {\n              validationErrMessage = `does not export a bootstrap function or array of functions`;\n            }\n          }\n\n          const type = objectType(appOpts);\n\n          if (validationErrCode) {\n            let appOptsStr;\n            try {\n              appOptsStr = JSON.stringify(appOpts);\n            } catch {}\n            console.error(\n              formatErrorMessage(\n                validationErrCode,\n                __DEV__ &&\n                  `The loading function for single-spa ${type} '${toName(\n                    app\n                  )}' resolved with the following, which does not have bootstrap, mount, and unmount functions`,\n                type,\n                toName(app),\n                appOptsStr\n              ),\n              appOpts\n            );\n            handleAppError(validationErrMessage, app, SKIP_BECAUSE_BROKEN);\n            return app;\n          }\n\n          if (appOpts.devtools && appOpts.devtools.overlays) {\n            app.devtools.overlays = assign(\n              {},\n              app.devtools.overlays,\n              appOpts.devtools.overlays\n            );\n          }\n\n          app.status = NOT_BOOTSTRAPPED;\n          app.bootstrap = flattenFnArray(appOpts, \"bootstrap\");\n          app.mount = flattenFnArray(appOpts, \"mount\");\n          app.unmount = flattenFnArray(appOpts, \"unmount\");\n          app.unload = flattenFnArray(appOpts, \"unload\");\n          app.timeouts = ensureValidAppTimeouts(appOpts.timeouts);\n\n          delete app.loadPromise;\n\n          return app;\n        });\n      })\n      .catch(err => {\n        delete app.loadPromise;\n\n        let newStatus;\n        if (isUserErr) {\n          newStatus = SKIP_BECAUSE_BROKEN;\n        } else {\n          newStatus = LOAD_ERROR;\n          app.loadErrorTime = new Date().getTime();\n        }\n        handleAppError(err, app, newStatus);\n\n        return app;\n      }));\n  });\n}\n","import { reroute } from \"./reroute.js\";\nimport { find } from \"../utils/find.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\n\n/* We capture navigation event listeners so that we can make sure\n * that application navigation listeners are not called until\n * single-spa has ensured that the correct applications are\n * unmounted and mounted.\n */\nconst capturedEventListeners = {\n  hashchange: [],\n  popstate: []\n};\n\nexport const routingEventsListeningTo = [\"hashchange\", \"popstate\"];\n\nexport function navigateToUrl(obj) {\n  let url;\n  if (typeof obj === \"string\") {\n    url = obj;\n  } else if (this && this.href) {\n    url = this.href;\n  } else if (\n    obj &&\n    obj.currentTarget &&\n    obj.currentTarget.href &&\n    obj.preventDefault\n  ) {\n    url = obj.currentTarget.href;\n    obj.preventDefault();\n  } else {\n    throw Error(\n      formatErrorMessage(\n        14,\n        __DEV__ &&\n          `singleSpaNavigate/navigateToUrl must be either called with a string url, with an <a> tag as its context, or with an event whose currentTarget is an <a> tag`\n      )\n    );\n  }\n\n  const current = parseUri(window.location.href);\n  const destination = parseUri(url);\n\n  if (url.indexOf(\"#\") === 0) {\n    window.location.hash = destination.hash;\n  } else if (current.host !== destination.host && destination.host) {\n    if (process.env.BABEL_ENV === \"test\") {\n      return { wouldHaveReloadedThePage: true };\n    } else {\n      window.location.href = url;\n    }\n  } else if (\n    destination.pathname === current.pathname &&\n    destination.search === current.pathname\n  ) {\n    window.location.hash = destination.hash;\n  } else {\n    // different path, host, or query params\n    window.history.pushState(null, null, url);\n  }\n}\n\nexport function callCapturedEventListeners(eventArguments) {\n  if (eventArguments) {\n    const eventType = eventArguments[0].type;\n    if (routingEventsListeningTo.indexOf(eventType) >= 0) {\n      capturedEventListeners[eventType].forEach(listener => {\n        try {\n          // The error thrown by application event listener should not break single-spa down.\n          // Just like https://github.com/single-spa/single-spa/blob/85f5042dff960e40936f3a5069d56fc9477fac04/src/navigation/reroute.js#L140-L146 did\n          listener.apply(this, eventArguments);\n        } catch (e) {\n          setTimeout(() => {\n            throw e;\n          });\n        }\n      });\n    }\n  }\n}\n\nlet urlRerouteOnly;\n\nexport function setUrlRerouteOnly(val) {\n  urlRerouteOnly = val;\n}\n\nfunction urlReroute() {\n  reroute([], arguments);\n}\n\n// We will trigger an app change for any routing events.\nwindow.addEventListener(\"hashchange\", urlReroute);\nwindow.addEventListener(\"popstate\", urlReroute);\n\n// Monkeypatch addEventListener so that we can ensure correct timing\nconst originalAddEventListener = window.addEventListener;\nconst originalRemoveEventListener = window.removeEventListener;\nwindow.addEventListener = function(eventName, fn) {\n  if (typeof fn === \"function\") {\n    if (\n      routingEventsListeningTo.indexOf(eventName) >= 0 &&\n      !find(capturedEventListeners[eventName], listener => listener === fn)\n    ) {\n      capturedEventListeners[eventName].push(fn);\n      return;\n    }\n  }\n\n  return originalAddEventListener.apply(this, arguments);\n};\n\nwindow.removeEventListener = function(eventName, listenerFn) {\n  if (typeof listenerFn === \"function\") {\n    if (routingEventsListeningTo.indexOf(eventName) >= 0) {\n      capturedEventListeners[eventName] = capturedEventListeners[\n        eventName\n      ].filter(fn => fn !== listenerFn);\n      return;\n    }\n  }\n\n  return originalRemoveEventListener.apply(this, arguments);\n};\n\nwindow.history.pushState = patchedUpdateState(window.history.pushState);\nwindow.history.replaceState = patchedUpdateState(window.history.replaceState);\n\nfunction patchedUpdateState(updateState) {\n  return function() {\n    const urlBefore = window.location.href;\n    const result = updateState.apply(this, arguments);\n    const urlAfter = window.location.href;\n\n    if (!urlRerouteOnly || urlBefore !== urlAfter) {\n      urlReroute(createPopStateEvent(window.history.state));\n    }\n\n    return result;\n  };\n}\n\nfunction createPopStateEvent(state) {\n  // https://github.com/single-spa/single-spa/issues/224 and https://github.com/single-spa/single-spa-angular/issues/49\n  // We need a popstate event even though the browser doesn't do one by default when you call replaceState, so that\n  // all the applications can reroute.\n  try {\n    return new PopStateEvent(\"popstate\", { state });\n  } catch (err) {\n    // IE 11 compatibility https://github.com/single-spa/single-spa/issues/299\n    // https://docs.microsoft.com/en-us/openspecs/ie_standards/ms-html5e/bd560f47-b349-4d2c-baa8-f1560fb489dd\n    const evt = document.createEvent(\"PopStateEvent\");\n    evt.initPopStateEvent(\"popstate\", false, false, state);\n    return evt;\n  }\n}\n\n/* For convenience in `onclick` attributes, we expose a global function for navigating to\n * whatever an <a> tag's href is.\n */\nwindow.singleSpaNavigate = navigateToUrl;\n\nfunction parseUri(str) {\n  const anchor = document.createElement(\"a\");\n  anchor.href = str;\n  return anchor;\n}\n","import { routingEventsListeningTo } from \"./navigation/navigation-events.js\";\n\nlet hasInitialized = false;\n\nexport function ensureJQuerySupport(jQuery = window.jQuery) {\n  if (!jQuery) {\n    if (window.$ && window.$.fn && window.$.fn.jquery) {\n      jQuery = window.$;\n    }\n  }\n\n  if (jQuery && !hasInitialized) {\n    const originalJQueryOn = jQuery.fn.on;\n    const originalJQueryOff = jQuery.fn.off;\n\n    jQuery.fn.on = function(eventString, fn) {\n      return captureRoutingEvents.call(\n        this,\n        originalJQueryOn,\n        window.addEventListener,\n        eventString,\n        fn,\n        arguments\n      );\n    };\n\n    jQuery.fn.off = function(eventString, fn) {\n      return captureRoutingEvents.call(\n        this,\n        originalJQueryOff,\n        window.removeEventListener,\n        eventString,\n        fn,\n        arguments\n      );\n    };\n\n    hasInitialized = true;\n  }\n}\n\nfunction captureRoutingEvents(\n  originalJQueryFunction,\n  nativeFunctionToCall,\n  eventString,\n  fn,\n  originalArgs\n) {\n  if (typeof eventString !== \"string\") {\n    return originalJQueryFunction.apply(this, originalArgs);\n  }\n\n  const eventNames = eventString.split(/\\s+/);\n  eventNames.forEach(eventName => {\n    if (routingEventsListeningTo.indexOf(eventName) >= 0) {\n      nativeFunctionToCall(eventName, fn);\n      eventString = eventString.replace(eventName, \"\");\n    }\n  });\n\n  if (eventString.trim() === \"\") {\n    return this;\n  } else {\n    return originalJQueryFunction.apply(this, originalArgs);\n  }\n}\n","import {\n  NOT_MOUNTED,\n  UNLOADING,\n  NOT_LOADED,\n  SKIP_BECAUSE_BROKEN,\n  isntActive,\n  toName\n} from \"../applications/app.helpers.js\";\nimport { handleAppError } from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\n\nconst appsToUnload = {};\n\nexport function toUnloadPromise(app) {\n  return Promise.resolve().then(() => {\n    const unloadInfo = appsToUnload[toName(app)];\n\n    if (!unloadInfo) {\n      /* No one has called unloadApplication for this app,\n       */\n      return app;\n    }\n\n    if (app.status === NOT_LOADED) {\n      /* This app is already unloaded. We just need to clean up\n       * anything that still thinks we need to unload the app.\n       */\n      finishUnloadingApp(app, unloadInfo);\n      return app;\n    }\n\n    if (app.status === UNLOADING) {\n      /* Both unloadApplication and reroute want to unload this app.\n       * It only needs to be done once, though.\n       */\n      return unloadInfo.promise.then(() => app);\n    }\n\n    if (app.status !== NOT_MOUNTED) {\n      /* The app cannot be unloaded until it is unmounted.\n       */\n      return app;\n    }\n\n    app.status = UNLOADING;\n    return reasonableTime(app, \"unload\")\n      .then(() => {\n        finishUnloadingApp(app, unloadInfo);\n        return app;\n      })\n      .catch(err => {\n        errorUnloadingApp(app, unloadInfo, err);\n        return app;\n      });\n  });\n}\n\nfunction finishUnloadingApp(app, unloadInfo) {\n  delete appsToUnload[toName(app)];\n\n  // Unloaded apps don't have lifecycles\n  delete app.bootstrap;\n  delete app.mount;\n  delete app.unmount;\n  delete app.unload;\n\n  app.status = NOT_LOADED;\n\n  /* resolve the promise of whoever called unloadApplication.\n   * This should be done after all other cleanup/bookkeeping\n   */\n  unloadInfo.resolve();\n}\n\nfunction errorUnloadingApp(app, unloadInfo, err) {\n  delete appsToUnload[toName(app)];\n\n  // Unloaded apps don't have lifecycles\n  delete app.bootstrap;\n  delete app.mount;\n  delete app.unmount;\n  delete app.unload;\n\n  handleAppError(err, app, SKIP_BECAUSE_BROKEN);\n  unloadInfo.reject(err);\n}\n\nexport function addAppToUnload(app, promiseGetter, resolve, reject) {\n  appsToUnload[toName(app)] = { app, resolve, reject };\n  Object.defineProperty(appsToUnload[toName(app)], \"promise\", {\n    get: promiseGetter\n  });\n}\n\nexport function getAppUnloadInfo(appName) {\n  return appsToUnload[appName];\n}\n\nexport function getAppsToUnload() {\n  return Object.keys(appsToUnload)\n    .map(appName => appsToUnload[appName].app)\n    .filter(isntActive);\n}\n","import { ensureJQuerySupport } from \"../jquery-support.js\";\nimport {\n  isActive,\n  isLoaded,\n  isntLoaded,\n  toName,\n  NOT_LOADED,\n  shouldBeActive,\n  shouldntBeActive,\n  isntActive,\n  notSkipped,\n  withoutLoadErrors\n} from \"./app.helpers.js\";\nimport { reroute } from \"../navigation/reroute.js\";\nimport { find } from \"../utils/find.js\";\nimport { toUnmountPromise } from \"../lifecycles/unmount.js\";\nimport {\n  toUnloadPromise,\n  getAppUnloadInfo,\n  addAppToUnload\n} from \"../lifecycles/unload.js\";\nimport { formatErrorMessage } from \"./app-errors.js\";\n\nconst apps = [];\n\nexport function getMountedApps() {\n  return apps.filter(isActive).map(toName);\n}\n\nexport function getAppNames() {\n  return apps.map(toName);\n}\n\n// used in devtools, not (currently) exposed as a single-spa API\nexport function getRawAppData() {\n  return [...apps];\n}\n\nexport function getAppStatus(appName) {\n  const app = find(apps, app => toName(app) === appName);\n  return app ? app.status : null;\n}\n\nexport function registerApplication(\n  appName,\n  applicationOrLoadingFn,\n  activityFn,\n  customProps = {}\n) {\n  if (typeof appName !== \"string\" || appName.length === 0)\n    throw Error(\n      formatErrorMessage(\n        20,\n        __DEV__ &&\n          `The first argument to registerApplication must be a non-empty string 'appName'`\n      )\n    );\n  if (getAppNames().indexOf(appName) !== -1)\n    throw Error(\n      formatErrorMessage(\n        21,\n        __DEV__ && `There is already an app declared with name ${appName}`,\n        appName\n      )\n    );\n  if (typeof customProps !== \"object\" || Array.isArray(customProps))\n    throw Error(\n      formatErrorMessage(22, __DEV__ && \"customProps must be an object\")\n    );\n\n  if (!applicationOrLoadingFn)\n    throw Error(\n      formatErrorMessage(\n        23,\n        __DEV__ && \"The application or loading function is required\"\n      )\n    );\n\n  let loadImpl;\n  if (typeof applicationOrLoadingFn !== \"function\") {\n    // applicationOrLoadingFn is an application\n    loadImpl = () => Promise.resolve(applicationOrLoadingFn);\n  } else {\n    // applicationOrLoadingFn is a loadingFn\n    loadImpl = applicationOrLoadingFn;\n  }\n\n  if (typeof activityFn !== \"function\")\n    throw Error(\n      formatErrorMessage(\n        24,\n        __DEV__ && `The activityFunction argument must be a function`\n      )\n    );\n\n  apps.push({\n    loadErrorTime: null,\n    name: appName,\n    loadImpl,\n    activeWhen: activityFn,\n    status: NOT_LOADED,\n    parcels: {},\n    devtools: {\n      overlays: {\n        options: {},\n        selectors: []\n      }\n    },\n    customProps\n  });\n\n  ensureJQuerySupport();\n\n  reroute();\n}\n\nexport function checkActivityFunctions(location) {\n  return apps.filter(app => app.activeWhen(location)).map(toName);\n}\n\nexport function getAppsToLoad() {\n  return apps\n    .filter(notSkipped)\n    .filter(withoutLoadErrors)\n    .filter(isntLoaded)\n    .filter(shouldBeActive);\n}\n\nexport function getAppsToUnmount() {\n  return apps\n    .filter(notSkipped)\n    .filter(isActive)\n    .filter(shouldntBeActive);\n}\n\nexport function getAppsToMount() {\n  return apps\n    .filter(notSkipped)\n    .filter(isntActive)\n    .filter(isLoaded)\n    .filter(shouldBeActive);\n}\n\nexport function unregisterApplication(appName) {\n  if (!apps.find(app => toName(app) === appName)) {\n    throw Error(\n      formatErrorMessage(\n        25,\n        __DEV__ &&\n          `Cannot unregister application '${appName}' because no such application has been registered`,\n        appName\n      )\n    );\n  }\n\n  return unloadApplication(appName).then(() => {\n    const appIndex = apps.findIndex(app => toName(app) === appName);\n    apps.splice(appIndex, 1);\n  });\n}\n\nexport function unloadApplication(appName, opts = { waitForUnmount: false }) {\n  if (typeof appName !== \"string\") {\n    throw Error(\n      formatErrorMessage(\n        26,\n        __DEV__ && `unloadApplication requires a string 'appName'`\n      )\n    );\n  }\n  const app = find(apps, App => toName(App) === appName);\n  if (!app) {\n    throw Error(\n      formatErrorMessage(\n        27,\n        __DEV__ &&\n          `Could not unload application '${appName}' because no such application has been registered`,\n        appName\n      )\n    );\n  }\n\n  const appUnloadInfo = getAppUnloadInfo(toName(app));\n  if (opts && opts.waitForUnmount) {\n    // We need to wait for unmount before unloading the app\n\n    if (appUnloadInfo) {\n      // Someone else is already waiting for this, too\n      return appUnloadInfo.promise;\n    } else {\n      // We're the first ones wanting the app to be resolved.\n      const promise = new Promise((resolve, reject) => {\n        addAppToUnload(app, () => promise, resolve, reject);\n      });\n      return promise;\n    }\n  } else {\n    /* We should unmount the app, unload it, and remount it immediately.\n     */\n\n    let resultPromise;\n\n    if (appUnloadInfo) {\n      // Someone else is already waiting for this app to unload\n      resultPromise = appUnloadInfo.promise;\n      immediatelyUnloadApp(app, appUnloadInfo.resolve, appUnloadInfo.reject);\n    } else {\n      // We're the first ones wanting the app to be resolved.\n      resultPromise = new Promise((resolve, reject) => {\n        addAppToUnload(app, () => resultPromise, resolve, reject);\n        immediatelyUnloadApp(app, resolve, reject);\n      });\n    }\n\n    return resultPromise;\n  }\n}\n\nfunction immediatelyUnloadApp(app, resolve, reject) {\n  toUnmountPromise(app)\n    .then(toUnloadPromise)\n    .then(() => {\n      resolve();\n      setTimeout(() => {\n        // reroute, but the unload promise is done\n        reroute();\n      });\n    })\n    .catch(reject);\n}\n","import CustomEvent from \"custom-event\";\nimport { isStarted } from \"../start.js\";\nimport { toLoadPromise } from \"../lifecycles/load.js\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap.js\";\nimport { toMountPromise } from \"../lifecycles/mount.js\";\nimport { toUnmountPromise } from \"../lifecycles/unmount.js\";\nimport {\n  getMountedApps,\n  getAppsToLoad,\n  getAppsToUnmount,\n  getAppsToMount\n} from \"../applications/apps.js\";\nimport { callCapturedEventListeners } from \"./navigation-events.js\";\nimport { getAppsToUnload, toUnloadPromise } from \"../lifecycles/unload.js\";\n\nlet appChangeUnderway = false,\n  peopleWaitingOnAppChange = [];\n\nexport function triggerAppChange() {\n  // Call reroute with no arguments, intentionally\n  return reroute();\n}\n\nexport function reroute(pendingPromises = [], eventArguments) {\n  if (appChangeUnderway) {\n    return new Promise((resolve, reject) => {\n      peopleWaitingOnAppChange.push({\n        resolve,\n        reject,\n        eventArguments\n      });\n    });\n  }\n\n  let wasNoOp = true;\n\n  if (isStarted()) {\n    appChangeUnderway = true;\n    return performAppChanges();\n  } else {\n    return loadApps();\n  }\n\n  function loadApps() {\n    return Promise.resolve().then(() => {\n      const loadPromises = getAppsToLoad().map(toLoadPromise);\n\n      if (loadPromises.length > 0) {\n        wasNoOp = false;\n      }\n\n      return (\n        Promise.all(loadPromises)\n          .then(callAllEventListeners)\n          // there are no mounted apps, before start() is called, so we always return []\n          .then(() => [])\n          .catch(err => {\n            callAllEventListeners();\n            throw err;\n          })\n      );\n    });\n  }\n\n  function performAppChanges() {\n    return Promise.resolve().then(() => {\n      window.dispatchEvent(\n        new CustomEvent(\n          \"single-spa:before-routing-event\",\n          getCustomEventDetail()\n        )\n      );\n      const unloadPromises = getAppsToUnload().map(toUnloadPromise);\n\n      const unmountUnloadPromises = getAppsToUnmount()\n        .map(toUnmountPromise)\n        .map(unmountPromise => unmountPromise.then(toUnloadPromise));\n\n      const allUnmountPromises = unmountUnloadPromises.concat(unloadPromises);\n      if (allUnmountPromises.length > 0) {\n        wasNoOp = false;\n      }\n\n      const unmountAllPromise = Promise.all(allUnmountPromises);\n\n      const appsToLoad = getAppsToLoad();\n\n      /* We load and bootstrap apps while other apps are unmounting, but we\n       * wait to mount the app until all apps are finishing unmounting\n       */\n      const loadThenMountPromises = appsToLoad.map(app => {\n        return toLoadPromise(app)\n          .then(toBootstrapPromise)\n          .then(app => {\n            return unmountAllPromise.then(() => toMountPromise(app));\n          });\n      });\n      if (loadThenMountPromises.length > 0) {\n        wasNoOp = false;\n      }\n\n      /* These are the apps that are already bootstrapped and just need\n       * to be mounted. They each wait for all unmounting apps to finish up\n       * before they mount.\n       */\n      const mountPromises = getAppsToMount()\n        .filter(appToMount => appsToLoad.indexOf(appToMount) < 0)\n        .map(appToMount => {\n          return toBootstrapPromise(appToMount)\n            .then(() => unmountAllPromise)\n            .then(() => toMountPromise(appToMount));\n        });\n      if (mountPromises.length > 0) {\n        wasNoOp = false;\n      }\n      return unmountAllPromise\n        .catch(err => {\n          callAllEventListeners();\n          throw err;\n        })\n        .then(() => {\n          /* Now that the apps that needed to be unmounted are unmounted, their DOM navigation\n           * events (like hashchange or popstate) should have been cleaned up. So it's safe\n           * to let the remaining captured event listeners to handle about the DOM event.\n           */\n          callAllEventListeners();\n\n          return Promise.all(loadThenMountPromises.concat(mountPromises))\n            .catch(err => {\n              pendingPromises.forEach(promise => promise.reject(err));\n              throw err;\n            })\n            .then(finishUpAndReturn);\n        });\n    });\n  }\n\n  function finishUpAndReturn() {\n    const returnValue = getMountedApps();\n    pendingPromises.forEach(promise => promise.resolve(returnValue));\n\n    try {\n      const appChangeEventName = wasNoOp\n        ? \"single-spa:no-app-change\"\n        : \"single-spa:app-change\";\n      window.dispatchEvent(\n        new CustomEvent(appChangeEventName, getCustomEventDetail())\n      );\n      window.dispatchEvent(\n        new CustomEvent(\"single-spa:routing-event\", getCustomEventDetail())\n      );\n    } catch (err) {\n      /* We use a setTimeout because if someone else's event handler throws an error, single-spa\n       * needs to carry on. If a listener to the event throws an error, it's their own fault, not\n       * single-spa's.\n       */\n      setTimeout(() => {\n        throw err;\n      });\n    }\n\n    /* Setting this allows for subsequent calls to reroute() to actually perform\n     * a reroute instead of just getting queued behind the current reroute call.\n     * We want to do this after the mounting/unmounting is done but before we\n     * resolve the promise for the `reroute` function.\n     */\n    appChangeUnderway = false;\n\n    if (peopleWaitingOnAppChange.length > 0) {\n      /* While we were rerouting, someone else triggered another reroute that got queued.\n       * So we need reroute again.\n       */\n      const nextPendingPromises = peopleWaitingOnAppChange;\n      peopleWaitingOnAppChange = [];\n      reroute(nextPendingPromises);\n    }\n\n    return returnValue;\n  }\n\n  /* We need to call all event listeners that have been delayed because they were\n   * waiting on single-spa. This includes haschange and popstate events for both\n   * the current run of performAppChanges(), but also all of the queued event listeners.\n   * We want to call the listeners in the same order as if they had not been delayed by\n   * single-spa, which means queued ones first and then the most recent one.\n   */\n  function callAllEventListeners() {\n    pendingPromises.forEach(pendingPromise => {\n      callCapturedEventListeners(pendingPromise.eventArguments);\n    });\n\n    callCapturedEventListeners(eventArguments);\n  }\n\n  function getCustomEventDetail() {\n    const result = { detail: {} };\n\n    if (eventArguments && eventArguments[0]) {\n      result.detail.originalEvent = eventArguments[0];\n    }\n\n    return result;\n  }\n}\n","import { reroute } from \"./navigation/reroute.js\";\nimport { formatErrorMessage } from \"./applications/app-errors.js\";\nimport { setUrlRerouteOnly } from \"./navigation/navigation-events.js\";\n\nlet started = false;\n\nexport function start(opts) {\n  started = true;\n  if (opts && opts.urlRerouteOnly) {\n    setUrlRerouteOnly(opts.urlRerouteOnly);\n  }\n  reroute();\n}\n\nexport function isStarted() {\n  return started;\n}\n\nsetTimeout(() => {\n  if (!started) {\n    console.warn(\n      formatErrorMessage(\n        1,\n        __DEV__ &&\n          `singleSpa.start() has not been called, 5000ms after single-spa was loaded. Before start() is called, apps can be declared and loaded, but not bootstrapped or mounted.`\n      )\n    );\n  }\n}, 5000);\n","import { getRawAppData, unregisterApplication } from \"../applications/apps\";\nimport { reroute } from \"../navigation/reroute\";\nimport { NOT_LOADED } from \"../applications/app.helpers\";\nimport { toLoadPromise } from \"../lifecycles/load\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap\";\n\nexport default {\n  getRawAppData,\n  reroute,\n  NOT_LOADED,\n  toLoadPromise,\n  toBootstrapPromise,\n  unregisterApplication\n};\n","export { start } from \"./start.js\";\nexport { ensureJQuerySupport } from \"./jquery-support.js\";\nexport {\n  setBootstrapMaxTime,\n  setMountMaxTime,\n  setUnmountMaxTime,\n  setUnloadMaxTime\n} from \"./applications/timeouts.js\";\nexport {\n  registerApplication,\n  getMountedApps,\n  getAppStatus,\n  unloadApplication,\n  checkActivityFunctions,\n  getAppNames\n} from \"./applications/apps.js\";\nexport { navigateToUrl } from \"./navigation/navigation-events.js\";\nexport { triggerAppChange } from \"./navigation/reroute.js\";\nexport {\n  addErrorHandler,\n  removeErrorHandler\n} from \"./applications/app-errors.js\";\nexport { mountRootParcel } from \"./parcels/mount-parcel.js\";\n\nexport {\n  NOT_LOADED,\n  LOADING_SOURCE_CODE,\n  NOT_BOOTSTRAPPED,\n  BOOTSTRAPPING,\n  NOT_MOUNTED,\n  MOUNTING,\n  UPDATING,\n  LOAD_ERROR,\n  MOUNTED,\n  UNMOUNTING,\n  SKIP_BECAUSE_BROKEN\n} from \"./applications/app.helpers.js\";\n\nimport devtools from \"./devtools/devtools\";\nif (window && window.__SINGLE_SPA_DEVTOOLS__) {\n  window.__SINGLE_SPA_DEVTOOLS__.exposedMethods = devtools;\n}\n"],"names":["NativeCustomEvent","CustomEvent","p","detail","foo","type","e","useNative","document","createEvent","params","initCustomEvent","bubbles","cancelable","createEventObject","Boolean","errorHandlers","handleAppError","err","app","newStatus","transformedErr","transformErr","length","forEach","handler","setTimeout","addErrorHandler","Error","formatErrorMessage","push","removeErrorHandler","removedSomething","filter","h","isHandler","code","msg","args","join","ogErr","appOrParcel","result","errPrefix","objectType","toName","status","message","console","warn","JSON","stringify","appOrParcelName","NOT_LOADED","LOADING_SOURCE_CODE","NOT_BOOTSTRAPPED","BOOTSTRAPPING","NOT_MOUNTED","MOUNTING","MOUNTED","UPDATING","UNMOUNTING","LOAD_ERROR","SKIP_BECAUSE_BROKEN","isActive","isntActive","isLoaded","isntLoaded","shouldBeActive","activeWhen","window","location","shouldntBeActive","notSkipped","item","withoutLoadErrors","Date","getTime","loadErrorTime","name","isParcel","unmountThisParcel","assign","i","arguments","key","find","arr","func","validLifecycleFn","fn","Array","isArray","flattenFnArray","lifecycle","fns","Promise","resolve","props","reduce","resultPromise","index","then","thisPromise","smellsLikeAPromise","reject","promise","catch","toBootstrapPromise","hardFail","reasonableTime","toUnmountPromise","unmountChildrenParcels","Object","keys","parcels","map","parcelId","all","unmountAppOrParcel","parcelError","parentError","beforeFirstMountFired","firstMountFired","toMountPromise","dispatchEvent","setSkipBecauseBroken","parcelCount","rootParcels","mountRootParcel","mountParcel","apply","config","customProps","owningAppOrParcel","this","_typeof","domElement","externalRepresentation","id","passedConfigLoadingFunction","configLoadingFunction","parcel","parentName","value","resolveUnmount","rejectUnmount","loadPromise","bootstrapPromise","bootstrap","mount","unmount","update","timeouts","ensureValidAppTimeouts","promiseWithoutReturnValue","toUpdatePromise","mountPromise","unmountPromise","getStatus","getProps","bind","singleSpa","unmountSelf","globalTimeoutConfig","millis","dieOnTimeout","warningMillis","unload","setBootstrapMaxTime","time","setMountMaxTime","setUnmountMaxTime","setUnloadMaxTime","timeoutConfig","warningPeriod","finished","errored","val","maybeTimingOut","errMsg","shouldError","error","numWarnings","numMillis","toLoadPromise","loadImpl","isUserErr","validationErrCode","appOpts","appOptsStr","validationErrMessage","devtools","overlays","urlRerouteOnly","capturedEventListeners","hashchange","popstate","routingEventsListeningTo","navigateToUrl","obj","url","href","currentTarget","preventDefault","current","parseUri","destination","indexOf","hash","host","pathname","search","history","pushState","callCapturedEventListeners","eventArguments","eventType","listener","_this","urlReroute","reroute","addEventListener","originalAddEventListener","originalRemoveEventListener","removeEventListener","patchedUpdateState","updateState","urlBefore","urlAfter","createPopStateEvent","state","PopStateEvent","evt","initPopStateEvent","str","anchor","createElement","eventName","listenerFn","replaceState","singleSpaNavigate","hasInitialized","ensureJQuerySupport","jQuery","$","jquery","originalJQueryOn","on","originalJQueryOff","off","eventString","captureRoutingEvents","call","originalJQueryFunction","nativeFunctionToCall","originalArgs","split","replace","trim","appsToUnload","toUnloadPromise","unloadInfo","finishUnloadingApp","errorUnloadingApp","addAppToUnload","promiseGetter","defineProperty","get","getAppUnloadInfo","appName","getAppsToUnload","apps","getMountedApps","getAppNames","getAppStatus","registerApplication","applicationOrLoadingFn","activityFn","options","selectors","checkActivityFunctions","getAppsToLoad","getAppsToUnmount","getAppsToMount","unloadApplication","opts","waitForUnmount","App","appUnloadInfo","immediatelyUnloadApp","appChangeUnderway","peopleWaitingOnAppChange","triggerAppChange","pendingPromises","wasNoOp","isStarted","performAppChanges","loadApps","loadPromises","callAllEventListeners","getCustomEventDetail","unloadPromises","allUnmountPromises","concat","unmountAllPromise","appsToLoad","loadThenMountPromises","mountPromises","appToMount","finishUpAndReturn","returnValue","appChangeEventName","nextPendingPromises","pendingPromise","originalEvent","started","start","getRawAppData","unregisterApplication","appIndex","findIndex","splice","__SINGLE_SPA_DEVTOOLS__","exposedMethods"],"mappings":"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"}